<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>de.uni_passau.fim</groupId>
  <artifactId>talent_tauscher</artifactId>
  <version>1.0</version>
  <name>TalentTauscher</name>
  <packaging>war</packaging>

  <properties>
    <!-- Basic project settings -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>21</maven.compiler.source>
    <maven.compiler.target>21</maven.compiler.target>

    <!-- Dependency versions -->
    <junit.version>5.10.2</junit.version>
    <jacoco.version>0.8.11</jacoco.version>
    <faces.version>4.1.0-M1</faces.version>
    <weld.version>6.0.0.Beta1</weld.version>
    <postgresql.version>42.7.3</postgresql.version>
    <mockito.version>5.10.0</mockito.version>
    <selenium.version>4.21.0</selenium.version>
    <webdrivermanager.version>5.7.0</webdrivermanager.version>
    <junit-jupiter.version>5.10.1</junit-jupiter.version>
    <embedded-postgres.version>2.0.7</embedded-postgres.version>
    <junit-platform-suite-engine>1.10.1</junit-platform-suite-engine>
    <commons-io.version>2.15.1</commons-io.version>


    <!-- Plugin versions -->
    <maven-compiler-plugin.version>3.12.1</maven-compiler-plugin.version>
    <maven-war-plugin.version>3.4.0</maven-war-plugin.version>
    <maven-surefire-plugin.version>3.2.5</maven-surefire-plugin.version>
    <maven-failsafe-plugin.version>3.2.5</maven-failsafe-plugin.version>
    <fmt-maven-plugin.version>2.23</fmt-maven-plugin.version>
    <spotbugs-maven-plugin.version>4.8.5.0</spotbugs-maven-plugin.version>
    <checkstyle.version>10.10.0</checkstyle.version>
    <cargo-maven3-plugin.version>1.10.10</cargo-maven3-plugin.version>

    <!-- Test execution control -->
    <skipUnitTests>false</skipUnitTests>
    <skipIntegrationTests>false</skipIntegrationTests>
    <skipSystemTests>false</skipSystemTests>
  </properties>

  <dependencies>
    <!-- JSF API and Implementation -->

    <dependency>
      <groupId>org.glassfish</groupId>
      <artifactId>jakarta.faces</artifactId>
      <version>${faces.version}</version>
    </dependency>

    <dependency>
      <groupId>io.zonky.test</groupId>
      <artifactId>embedded-postgres</artifactId>
      <version>${embedded-postgres.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- Bootstrap WebJar -->
    <dependency>
      <groupId>org.webjars</groupId>
      <artifactId>bootstrap</artifactId>
      <version>5.1.3</version>
    </dependency>

    <!-- Jakarta Mail -->
    <dependency>
      <groupId>com.sun.mail</groupId>
      <artifactId>jakarta.mail</artifactId>
      <version>2.0.1</version>
    </dependency>

    <!-- OmniFaces -->
    <dependency>
      <groupId>org.omnifaces</groupId>
      <artifactId>omnifaces</artifactId>
      <version>4.4.1</version>
    </dependency>

    <!-- CDI with Weld -->
    <dependency>
      <groupId>org.jboss.weld.servlet</groupId>
      <artifactId>weld-servlet-shaded</artifactId>
      <version>${weld.version}</version>
    </dependency>

    <!-- Database connectivity -->
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <version>${postgresql.version}</version>
      <scope>runtime</scope>
    </dependency>

    <!-- Test dependencies -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <version>${junit-jupiter.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-junit-jupiter</artifactId>
      <version>${mockito.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- Weld for CDI in testing -->
    <dependency>
      <groupId>org.jboss.weld</groupId>
      <artifactId>weld-junit5</artifactId>
      <version>4.0.0.Final</version>
      <scope>test</scope>
    </dependency>

    <!-- Selenium -->
    <dependency>
      <groupId>org.seleniumhq.selenium</groupId>
      <artifactId>selenium-java</artifactId>
      <version>${selenium.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>io.github.bonigarcia</groupId>
      <artifactId>webdrivermanager</artifactId>
      <version>${webdrivermanager.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.junit.platform</groupId>
      <artifactId>junit-platform-suite</artifactId>
      <version>${junit-platform-suite-engine}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>${commons-io.version}</version>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-simple</artifactId>
      <version>2.0.13</version>
    </dependency>
  </dependencies>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.junit</groupId>
        <artifactId>junit-bom</artifactId>
        <version>${junit.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>io.zonky.test.postgres</groupId>
        <artifactId>embedded-postgres-binaries-bom</artifactId>
        <version>16.1.1</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
      <plugins>

        <!-- Maven WAR Plugin -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-war-plugin</artifactId>
          <version>${maven-war-plugin.version}</version>
        </plugin>

        <plugin>
          <!-- Runs and builds the test reports of the unit tests -->
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${maven-surefire-plugin.version}</version>
          <dependencies>
            <dependency>
              <groupId>org.apache.maven.surefire</groupId>
              <artifactId>surefire-junit-platform</artifactId>
              <version>${maven-surefire-plugin.version}</version>
            </dependency>
          </dependencies>
          <executions>
            <execution>
              <id>default-test</id>
              <phase>test</phase>
              <goals>
                <goal>test</goal>
              </goals>
              <configuration>
                <skipTests>${skipUnitTests}</skipTests>
                <!--suppress UnresolvedMavenProperty -->
                <argLine>${surefireArgLine}</argLine>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <!-- Jacoco Maven Plugin -->
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>${jacoco.version}</version>
          <executions>
            <execution>
              <id>pre-unit-test</id>
              <goals>
                <goal>prepare-agent</goal>
              </goals>
              <configuration>
                <skip>${skipUnitTests}</skip>
                <destFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</destFile>
                <propertyName>surefireArgLine</propertyName>
              </configuration>
            </execution>
            <execution>
              <id>post-unit-test</id>
              <phase>test</phase>
              <goals>
                <goal>report</goal>
              </goals>
              <configuration>
                <dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>
                <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
              </configuration>
            </execution>

            <execution>
              <!--
              This phase will merge all the various reports from unit, integration, and system testing
              into one aggregated report.
              -->
              <id>aggregate-reports</id>
              <phase>verify</phase>
              <goals>
                <goal>merge</goal>
                <goal>report</goal>
              </goals>
              <configuration>
                <fileSets>
                  <fileSet>
                    <directory>${project.build.directory}/coverage-reports/</directory>
                    <includes>
                      <include>*.exec</include>
                    </includes>
                  </fileSet>
                </fileSets>
                <destFile>${project.build.directory}/coverage-reports/jacoco.exec</destFile>
                <dataFile>${project.build.directory}/coverage-reports/jacoco.exec</dataFile>
                <outputDirectory>${project.reporting.outputDirectory}/jacoco</outputDirectory>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <!-- SpotBugs Maven Plugin -->
        <plugin>
          <groupId>com.github.spotbugs</groupId>
          <artifactId>spotbugs-maven-plugin</artifactId>
          <version>${spotbugs-maven-plugin.version}</version>
          <configuration>
            <failOnError>true</failOnError>
            <includeTests>true</includeTests>
            <excludeFilterFile>ci_cd/checks/spotbugs-exclude.xml</excludeFilterFile>
          </configuration>
          <executions>
            <execution>
              <phase>verify</phase>
              <goals>
                <goal>spotbugs</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

      </plugins>
  </build>

  <profiles>
    <profile>
      <id>integration-tests</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>

      <build>
        <resources>
          <resource>
            <directory>src/main/resources</directory>
          </resource>
          <resource>
            <directory>src/test/resources</directory>
          </resource>
        </resources>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>3.3.0</version>
            <executions>
              <execution>
                <id>init-embedded-postgres</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>java</goal>
                </goals>
                <configuration>
                  <mainClass>de.uni_passau.fim.talent_tauscher.st.util.EmbeddedDatabaseManager</mainClass>
                  <classpathScope>test</classpathScope>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <!-- The failsafe plugin does similar to surefire but for integration tests -->
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>${maven-failsafe-plugin.version}</version>
            <dependencies>
              <dependency>
                <groupId>org.apache.maven.surefire</groupId>
                <artifactId>surefire-junit-platform</artifactId>
                <version>${maven-surefire-plugin.version}</version>
              </dependency>
            </dependencies>
            <executions>
              <execution>
                <id>integration-tests</id>
                <goals>
                  <goal>integration-test</goal>
                  <goal>verify</goal>
                </goals>
                <configuration>
                  <includes>
                    <include>**/*IT.java</include>
                  </includes>

                  <skipTests>${skipIntegrationTests}</skipTests>
                  <!--suppress UnresolvedMavenProperty -->
                  <argLine>${failsafeIntegrationTestArgLine}</argLine>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <!-- Measure coverage for integration tests -->
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>${jacoco.version}</version>
            <executions>
              <execution>
                <id>pre-integration-test</id>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
                <configuration>
                  <skip>${skipIntegrationTests}</skip>
                  <destFile>${project.build.directory}/coverage-reports/jacoco-it.exec</destFile>
                  <propertyName>failsafeIntegrationTestArgLine</propertyName>
                </configuration>
              </execution>

              <execution>
                <id>post-integration-test</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>report</goal>
                </goals>
                <configuration>
                  <skip>${skipIntegrationTests}</skip>
                  <dataFile>${project.build.directory}/coverage-reports/jacoco-it.exec</dataFile>
                  <outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>system-tests</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>3.3.0</version>
            <executions>
              <execution>
                <id>init-embedded-postgres</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>java</goal>
                </goals>
                <configuration>
                  <mainClass>de.uni_passau.fim.talent_tauscher.st.util.EmbeddedDatabaseManager</mainClass>
                  <classpathScope>test</classpathScope>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>${maven-failsafe-plugin.version}</version>
            <dependencies>
              <dependency>
                <groupId>org.apache.maven.surefire</groupId>
                <artifactId>surefire-junit-platform</artifactId>
                <version>${maven-surefire-plugin.version}</version>
              </dependency>
            </dependencies>
            <executions>
              <execution>
                <id>system-tests</id>
                <goals>
                  <goal>integration-test</goal>
                  <goal>verify</goal>
                </goals>
                <configuration>
                  <includes>
                    <include>**/*ST.java</include>
                    <include>**/ST*.java</include>
                  </includes>
                  <skipTests>${skipSystemTests}</skipTests>
                  <!--suppress UnresolvedMavenProperty -->
                  <argLine>${failsafeSystemTestArgLine}</argLine>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.codehaus.cargo</groupId>
            <artifactId>cargo-maven3-plugin</artifactId>
            <version>${cargo-maven3-plugin.version}</version>
            <configuration>
              <container>
                <containerId>tomcat10x</containerId>
                <zipUrlInstaller>
                  <url>https://downloads.apache.org/tomcat/tomcat-10/v10.1.19/bin/apache-tomcat-10.1.19.zip</url>
                </zipUrlInstaller>
              </container>

              <deployables>
                <deployable>
                  <location>${project.build.directory}/talent_tauscher-system_test.war</location>
                  <type>war</type>
                </deployable>
              </deployables>
              <configuration>
                <properties>
                  <cargo.jvmargs>
                    -javaagent:${settings.localRepository}/org/jacoco/org.jacoco.agent/${jacoco.version}/org.jacoco.agent-${jacoco.version}-runtime.jar=destfile=${project.build.directory}/coverage-reports/jacoco-st.exec,append=true
                  </cargo.jvmargs>
                </properties>
                <home>${project.build.directory}/tomcat</home>
                <type>standalone</type>
              </configuration>
            </configuration>
            <executions>
              <execution>
                <id>start-tomcat</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>start</goal>
                </goals>
              </execution>
              <execution>
                <id>stop-tomcat</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>stop</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>${maven-compiler-plugin.version}</version>
            <configuration>
              <compilerArgs>
                <arg>-Xlint:-options</arg>
              </compilerArgs>
              <source>${maven.compiler.source}</source>
              <target>${maven.compiler.target}</target>
              <debug>true</debug>
              <debuglevel>lines,vars,source</debuglevel>
            </configuration>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-war-plugin</artifactId>
            <version>${maven-war-plugin.version}</version>
            <configuration>
              <warName>${project.artifactId}-system_test</warName>
              <webResources>
                <resource>
                  <directory>${project.basedir}/src/test/resources/WEB-INF</directory>
                  <targetPath>WEB-INF</targetPath>
                </resource>
              </webResources>
            </configuration>
          </plugin>

          <plugin>
            <!-- Measure coverage for system tests -->
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>${jacoco.version}</version>
            <executions>
              <execution>
                <id>post-system-test</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>report</goal>
                </goals>
                <configuration>
                  <dataFile>${project.build.directory}/coverage-reports/jacoco-st.exec</dataFile>
                  <outputDirectory>${project.reporting.outputDirectory}/jacoco-st</outputDirectory>
                </configuration>
              </execution>
            </executions>
          </plugin>


        </plugins>
      </build>
    </profile>

    <profile>
      <id>m2e</id>
      <activation>
        <property>
          <name>m2e.version</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <executions>
              <execution>
                <id>default-testCompile</id>
                <phase>test-compile</phase>
                <configuration>
                  <testExcludes>
                    <exclude>**/package-info.java</exclude>
                  </testExcludes>
                </configuration>
                <goals>
                  <goal>testCompile</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
